{{- range $crd := .Values.userAuthz.internal.multitenancyCRDs }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: d8:user-authz:role:ns:editor:{{ $crd.name }}
  {{- include "helm_lib_module_labels" (list $ (dict "multitenancy" "true")) | nindent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: d8:user-authz:role:ns:editor:{{ $crd.name }}
subjects:
{{ $crd.spec.subjects | toYaml }}

{{- if hasKey $crd.spec "accessLevel" }}
  {{- if (list "Editor" "Admin" "ClusterEditor" "ClusterAdmin" "SuperAdmin" | has $crd.spec.accessLevel) }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: d8:user-authz:role:ns:creator:{{ $crd.name }}
  {{- include "helm_lib_module_labels" (list $ (dict "multitenancy" "true")) | nindent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: d8:user-authz:role:ns:creator
subjects:
{{ $crd.spec.subjects | toYaml }}
  {{- end }}
  {{- if (list "User" "PrivilegedUser" | has $crd.spec.accessLevel) }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: d8:user-authz:role:ns:reader:{{ $crd.name }}
  {{- include "helm_lib_module_labels" (list $ (dict "multitenancy" "true")) | nindent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: d8:user-authz:role:ns:reader
subjects:
{{ $crd.spec.subjects | toYaml }}
  {{- end }}
{{- end }} # accessLevel

  {{- if $crd.spec.additionalRoles }}
    {{- range $additional_role := $crd.spec.additionalRoles }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: user-authz:{{ $crd.name }}:additional-role:{{ $additional_role.name }}
  {{- include "helm_lib_module_labels" (list $) | nindent 2 }}
roleRef:
  {{- $additional_role | toYaml | nindent 2 }}
subjects:
{{ $crd.spec.subjects | toYaml }}
    {{- end }} # end range additional_role
  {{- end }} # end if additionalRoles
{{- end }} # end multitenancyCRDs
